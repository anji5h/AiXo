server:
  port: ${SERVER_PORT:8081}

spring:
  application:
    name: user-service
  cache:
    type: caffeine
    cache-names: lbCache
    caffeine:
      spec: maximumSize=500,expireAfterWrite=5m
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:user_svc_db}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  flyway:
    enabled: true
    locations: classpath:db/migration
  cloud:
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
      discovery:
        enabled: true
        instance-id: ${spring.application.name}:${random.value}
        health-check-path: /actuator/health
        health-check-interval: 10s
        prefer-ip-address: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8081/login/oauth2/code/{registrationId}}
            scope: openid,profile,email,https://www.googleapis.com/auth/gmail.readonly
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email
jwt:
  secret: ${JWT_SECRET:1b90a6e6e1d244b84f6c7bc06193c01cfa511c31e241bc919ae1ec302ef7cf58}
  expiration: ${JWT_EXPIRATION:86400}
oauth2:
  redirect-uri: ${REDIRECT_URI:http://localhost:5173/oauth2/redirect}

